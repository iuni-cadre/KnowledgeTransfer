/* This is the intermediate table that will extract values from the paper table */

CREATE TABLE IF NOT EXISTS mag_core.interface_1 AS
SELECT paper_id as paper_id, 
paper_title as paper_title,
year as year
FROM 
	mag_core.papers
;


/* This is the intermediate table that will extract values from the paper author affiliations table 
This will generate author_id and author_sequence_number for all the rows in the papers table.
*/

CREATE TABLE mag_core.interface_2 AS
SELECT interface_1.paper_id as paper_id,
       author_id as author_id,
       author_sequence_number as author_sequence_number,
       interface_1.paper_title as paper_title,
	   interface_1.year as year
FROM 
    mag_core.paper_author_affiliations
RIGHT JOIN mag_core.interface_1
	ON(paper_author_affiliations.paper_id = interface_1.paper_id)   
;

/* This is the intermediate table that will extract values from the authors table 
This will generate authors_display_name and authors_last_known_affiliation_id for all the rows in the interface_1 table.*/

CREATE TABLE mag_core.interface_3 AS
SELECT interface_2.paper_id as paper_id,
       interface_2.author_id as author_id,
       interface_2.author_sequence_number as author_sequence_number,
       display_name as authors_display_name,
       last_known_affiliation_id as authors_last_known_affiliation_id, 
       interface_2.paper_title as paper_title,
	   interface_2.year as year
FROM 
	mag_core.authors
RIGHT JOIN mag_core.interface_2
	ON(authors.author_id = interface_2.author_id)
;

/* This is the intermediate table where we are aggregating all the values.*/

/* string_agg(interface_3.authors_display_name::varchar, '|' ORDER BY author_sequence_number::bigint) as authors_display_name,
   string_agg(interface_3.authors_last_known_affiliation_id::varchar, '|' ORDER BY author_sequence_number::bigint) as authors_last_known_affiliation_id,
*/   

Example to check if author sequence number has been correctly ordered

CREATE TABLE mag_core.interface_4 AS
SELECT interface_3.paper_id as paper_id,
       array_agg(interface_3.author_sequence_number ORDER BY author_sequence_number) as author_sequence_number,
       max(interface_3.year) as year
FROM 
    mag_core.interface_3
GROUP BY interface_3.paper_id
;	

CREATE TABLE mag_core.interface_4 AS
SELECT interface_3.paper_id as paper_id,
       string_agg(interface_3.author_id, '|' ORDER BY author_sequence_number ASC) as author_id,
       array_agg(interface_3.author_sequence_number ORDER BY author_sequence_number) as author_sequence_number,
       string_agg(interface_3.authors_display_name, '|' ORDER BY author_sequence_number ASC) as authors_display_name,
       string_agg(interface_3.authors_last_known_affiliation_id, '|' ORDER BY author_sequence_number ASC) as authors_last_known_affiliation_id, 
       max(interface_3.paper_title) as paper_title,
       max(interface_3.year) as year 
FROM 
    mag_core.interface_3
GROUP BY interface_3.paper_id
ORDER BY author_sequence_number ASC
;	

/* This is where we are testing whether the aggregation has been done successfully or not.*/

create table mag_core.test as select * from mag_core.interface_4 ORDER BY paper_id LIMIT 10000;

create table mag_core.test2 as select * from mag_core.interface_4 where author_sequence_number != '1' ORDER BY paper_id LIMIT 10000;


/* This is the final interface table generated by joining the existing interface table with the intermediate table containing the right values*/

CREATE TABLE mag_core.mag_interface_table AS
SELECT final_mag_interface_table.paper_id as paper_id,
       interface_4.author_id as author_id,
       interface_4.author_sequence_number as author_sequence_number,
       interface_4.authors_display_name as authors_display_name,
       interface_4.authors_last_known_affiliation_id as authors_last_known_affiliation_id,
       final_mag_interface_table.journal_id as journal_id,
       final_mag_interface_table.conference_series_id as conference_series_id,
       final_mag_interface_table.conference_instance_id as conference_instance_id,
       final_mag_interface_table.paper_reference_id as paper_reference_id,
       final_mag_interface_table.field_of_study_id as field_of_study_id,
       final_mag_interface_table.doi as doi,
       final_mag_interface_table.doc_type as doc_type,
       interface_4.paper_title as paper_title,
       final_mag_interface_table.original_title as original_title,
       final_mag_interface_table.book_title as book_title,
       interface_4.year as year,
       final_mag_interface_table.date as date,
       final_mag_interface_table.paper_publisher as paper_publisher,
       final_mag_interface_table.issue as issue,
       final_mag_interface_table.paper_abstract as paper_abstract,
       final_mag_interface_table.paper_first_page as paper_first_page,
       final_mag_interface_table.paper_last_page as paper_last_page,
       final_mag_interface_table.paper_reference_count as paper_reference_count,
       final_mag_interface_table.paper_citation_count as paper_citation_count,
       final_mag_interface_table.paper_estimated_citation as paper_estimated_citation,
       final_mag_interface_table.conference_display_name as conference_display_name,
       final_mag_interface_table.journal_display_name as journal_display_name,
       final_mag_interface_table.journal_issn as journal_issn,
       final_mag_interface_table.journal_publisher as journal_publisher
FROM 
	mag_core.final_mag_interface_table
RIGHT JOIN mag_core.interface_4
	ON(interface_4.paper_id = final_mag_interface_table.paper_id)
;



ALTER TABLE mag_core.mag_interface_table DROP COLUMN paper_title_tsv;


\COPY mag_core.interface_5 TO '/home/ubuntu/mag_interface_table/interface5.csv' DELIMITER '~' ENCODING 'UTF-8' CSV HEADER;

scp -i /home/ubuntu/keys/cadre-datasets.pem /home/ubuntu/mag_interface_table/interface5.csv ubuntu@10.0.1.84:/home/ubuntu/mag_interface_table

select * from mag_core.final_mag_interface_table where paper_id = '2105974857';

